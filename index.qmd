---
title: "digiHerb"
format: 
  dashboard:
    orientation: columns
---

```{r setup}
#| include: false
#| warning: false
#| message: false

library(tidyverse)
library(stringr)
#library(DT)
#library(slickR)
#library(magick)
library(stringi)
```


```{r prepData}
#| include: false

fam <- readRDS('slektOGfam.RData')


lib <- tibble(
  paths = list.files(path = "img/", recursive = T, full.names = F)
) |>
  # remove first five characters of the path
  #mutate(temp = substr(paths, 5, nchar(paths))) |>
  separate(paths,
    into = c(
      "Vitenskapelig_navn",
      "Norsk_navn",
      "Funnsted",
      "dato"
    ),
    extra = "drop",
    sep = " - ",
    remove = F
  ) |>
  separate(
    col = "Vitenskapelig_navn",
    into = c("Slekt", 
             "epitet"),
    extra = "merge",
    sep = " ",
    remove=F
  ) |>
  mutate(
    # remove file extension
    dato = substr(dato, 1, nchar(dato)-4),
    # extract year
    "år" =  as.numeric(substr(dato, nchar(dato)-4, nchar(dato))),
    paths = paste0("img/", paths)
  ) |>
  unite(col = image, 
      Norsk_navn,
      Funnsted,
      dato,
      sep = ", ",
      remove = F) |>
  left_join(
    fam, by = join_by(Slekt == slekt)
  ) |>
  rename(
    Familie = familie
  ) 


# antall arter per slekt
slekterDT <- lib |>
  group_by(Slekt, Familie, epitet) |>
  summarise(arter = n())

# antall slekter og arter per familie
famDT <- lib |>
  group_by(Familie) |>
  summarise(slekter = n_distinct(Slekt),
            arter = n_distinct(epitet))


rekke <- seq(min(lib$år, na.rm = T), 
             max(lib$år, na.rm = T),1)
antTaxa <- data.frame("År"= rekke,
            "Unike_taxa" <- NA,
            "Nye_taxa" <- NA)

for(i in 1:length(rekke)){
  antTaxa[i,2] <- length(unique(lib$Vitenskapelig_navn[lib$år<=rekke[i]]))
  ifelse(rekke[i] > min(rekke),  
         antTaxa[i,3] <- antTaxa[i,2]-antTaxa[i-1,2],
         antTaxa[i,3] <- antTaxa[i,2])
}
colnames(antTaxa) <- c("År", "Antall_arter", "Antall_nye_arter")

ojs_define(dat = jsonlite::toJSON(lib))
```

```{r}
#| include: false
#| content: valuebox
#| title: "Antall taxa i databasen"
dagensAntall <- lib |>
  distinct(Vitenskapelig_navn) |>
  summarise(n = n()) |>
  pull(n)
```




## Column {width="35%"}

### Row {height="10%"}

```{r}
#| content: valuebox
#| title: "Antall taxa i databasen"
list(
 icon = "card-image", #https://icons.getbootstrap.com/
 color = "success",
 value = dagensAntall
)
```

### Row {height="10%" .flow}

```{ojs}
viewof selectedFamily = Inputs.select(
  ["All", ...JSON.parse(dat).map(d => d.Familie).sort((a, b) => a.localeCompare(b))], 
  { label: "Velg familie",
  unique: true,
  searchable: true}
)
```

### Row {height="10%" .flow}
```{ojs}
filteredFamily = {
  return selectedFamily === "All" 
    ? JSON.parse(dat)                   
    : JSON.parse(dat).filter(d => d.Familie === selectedFamily); 
}

viewof selectedGenus = Inputs.select(
  filteredFamily.map(d2 => String(d2.Slekt)),
  { label: "Velg slekt",
  searchable: true,
  unique: true}
)
```

### Row {height="10%" .flow}
```{ojs}
filteredGenus = {
  const data = JSON.parse(dat);
  return data.filter(d => d.Slekt === selectedGenus); 
}

viewof selectedTaxa = Inputs.select(
  filteredGenus.map(d => String(d.epitet)),
  { label: "Velg taxa",
  
  searchable: true,
  limit: 100,
  unique: true}
)
```

### Row {height="10%" .flow}
```{ojs}

filteredTaxa = {
  const data = JSON.parse(dat);
  return data.filter(d => d.epitet === selectedTaxa && d.Slekt === selectedGenus); 
}


viewof selectedImage = Inputs.select(
  filteredTaxa.map(d => ({
    label: String(d.image),  
    value: d
  })),
  { label: "Velg bilde",
  format: (item) => item.label,
  searchable: true,
  limit: 100}
)
```


## Column {width="65%"}

### Row {.tabset}
```{ojs}
//| title: "Se bilde"

html`<img 
    style="
      border-radius: 12px;
      max-width: 100%;
      height: auto;
      display: block;
      margin: 0 auto;
    "
    src='${selectedImage.value.paths}'
    alt="Selected image"
  >`
```

```{r}
#| title: "Antall nye taxa"
ggplot(data=antTaxa)+
    geom_histogram(aes(x=År, y=Antall_nye_arter), stat="identity")+
    scale_x_continuous(breaks=seq(2010,2024,1))+
    xlab("")+ylab("antall nye arter")+
    theme(axis.text.x = element_text(angle=45))+
    geom_line(aes(x=År, y=Antall_arter/2))+
    scale_y_continuous(name = "Søyler: Antall nye arter per år",
      # Add a second axis and specify its features
      sec.axis = sec_axis(~.*2, name="Linje: Totalt antall arter"))
```

```{r}
#| title: "Antall nye bilder per år"
ggplot(data=lib)+
    geom_histogram(aes(x=år), stat="count")+
    scale_x_continuous(breaks=seq(2010,2024,1))+
    xlab("")+ylab("antall bilder")
```
